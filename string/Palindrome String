/*
Palindrome String
EasyAccuracy: 51.21%Submissions: 197K+Points: 2
Lamp
Unable to Crack Interviews of Your Dream Companies ? Click Here to End This Problem!

Given a string S, check if it is palindrome or not.

Example 1:

Input: S = "abba"
Output: 1
Explanation: S is a palindrome
Example 2:

Input: S = "abc" 
Output: 0
Explanation: S is not a palindrome
 

Your Task:
You don't need to read input or print anything. Complete the function isPalindrome()which accepts string S and returns an integer value 1 or 0.

Expected Time Complexity: O(Length of S)
Expected Auxiliary Space: O(1)


Constraints:
1 <= Length of S<= 105
*/
==============================================================================================================================================
SOLUTION IN JAVA:
-----------------
/{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String S = read.readLine();
            
            Solution ob = new Solution();
            System.out.println(ob.isPalindrome(S));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution {
    int isPalindrome(String S) {
        // code here
        char []S_rev = new char[S.length()];
        for(int i=S.length()-1,k=0; i>=0; i--){
            S_rev[k++] = S.charAt(i);
        }
        String rev_S = new String(S_rev);
        if(S.equals(rev_S))
        return 1;
        return 0;
    }
};
